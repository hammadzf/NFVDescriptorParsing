<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1 (Python 3.9.6 on win32)" generated="20210916 18:01:05.646" rpa="false">
<suite id="s1" name="DescriptorDemo" source="C:\Users\xFlow\eclipse-workspace\DescriptorDemo">
<suite id="s1-s1" name="ParserTesting" source="C:\Users\xFlow\eclipse-workspace\DescriptorDemo\ParserTesting.robot">
<test id="s1-s1-t1" name="PARSE the descriptor file correctly">
<kw name="PARSE the Descriptor File">
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${descriptorType}'=='SOL001'</arg>
<arg>Fetch Information from SOL001 descriptor file</arg>
<arg>ELSE</arg>
<arg>Fetch Information from SOL006 descriptor file</arg>
</arguments>
<kw name="Fetch Information from SOL001 descriptor file">
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{VDU_labels}</var>
</assign>
<msg timestamp="20210916 18:01:06.379" level="INFO">@{VDU_labels} = [ ]</msg>
<status status="PASS" starttime="20210916 18:01:06.376" endtime="20210916 18:01:06.381"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{VNF_labels}</var>
</assign>
<msg timestamp="20210916 18:01:06.389" level="INFO">@{VNF_labels} = [ ]</msg>
<status status="PASS" starttime="20210916 18:01:06.385" endtime="20210916 18:01:06.391"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{VirtualLink_labels}</var>
</assign>
<msg timestamp="20210916 18:01:06.396" level="INFO">@{VirtualLink_labels} = [ ]</msg>
<status status="PASS" starttime="20210916 18:01:06.394" endtime="20210916 18:01:06.396"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{CP_labels}</var>
</assign>
<msg timestamp="20210916 18:01:06.400" level="INFO">@{CP_labels} = [ ]</msg>
<status status="PASS" starttime="20210916 18:01:06.399" endtime="20210916 18:01:06.402"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<assign>
<var>@{Storage_labels}</var>
</assign>
<msg timestamp="20210916 18:01:06.403" level="INFO">@{Storage_labels} = [ ]</msg>
<status status="PASS" starttime="20210916 18:01:06.402" endtime="20210916 18:01:06.404"></status>
</kw>
<kw name="${key} IN [ @{node_types.keys()} ]" type="for">
<kw name="${key} = tst010.vnf.simple" type="foritem">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${node_types['${key}']['derived_from']}</arg>
</arguments>
<assign>
<var>${node_type}</var>
</assign>
<msg timestamp="20210916 18:01:06.413" level="INFO">${node_type} = tosca.nodes.nfv.VNF</msg>
<status status="PASS" starttime="20210916 18:01:06.412" endtime="20210916 18:01:06.413"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${node_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<assign>
<var>${is_VNF}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${node_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.416" endtime="20210916 18:01:06.417"></status>
</kw>
<msg timestamp="20210916 18:01:06.421" level="INFO">${is_VNF} = True</msg>
<status status="PASS" starttime="20210916 18:01:06.414" endtime="20210916 18:01:06.421"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${is_VNF}</arg>
<arg>Set Global Variable</arg>
<arg>${tosca_type_derived_from_VNF}</arg>
<arg>${key}</arg>
</arguments>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${tosca_type_derived_from_VNF}</arg>
<arg>${key}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.425" level="INFO">${tosca_type_derived_from_VNF} = tst010.vnf.simple</msg>
<status status="PASS" starttime="20210916 18:01:06.423" endtime="20210916 18:01:06.425"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.422" endtime="20210916 18:01:06.426"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.409" endtime="20210916 18:01:06.426"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.404" endtime="20210916 18:01:06.427"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should not be empty</arg>
<arg>${tosca_type_derived_from_VNF}</arg>
</arguments>
<assign>
<var>${derived_type_is_used}</var>
</assign>
<kw name="Should Not Be Empty" library="BuiltIn">
<doc>Verifies that the given item is not empty.</doc>
<arguments>
<arg>${tosca_type_derived_from_VNF}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.430" level="INFO">Length is 17</msg>
<status status="PASS" starttime="20210916 18:01:06.429" endtime="20210916 18:01:06.430"></status>
</kw>
<msg timestamp="20210916 18:01:06.430" level="INFO">${derived_type_is_used} = True</msg>
<status status="PASS" starttime="20210916 18:01:06.428" endtime="20210916 18:01:06.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${derived_type_is_used}</arg>
<arg>Set Global Variable</arg>
<arg>${tosca_type_VNF}</arg>
<arg>${tosca_type_derived_from_VNF}</arg>
</arguments>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${tosca_type_VNF}</arg>
<arg>${tosca_type_derived_from_VNF}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.433" level="INFO">${tosca_type_VNF} = tst010.vnf.simple</msg>
<status status="PASS" starttime="20210916 18:01:06.432" endtime="20210916 18:01:06.434"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.431" endtime="20210916 18:01:06.434"></status>
</kw>
<kw name="${key} IN [ @{topology_template.node_templates.keys()} ]" type="for">
<kw name="${key} = right" type="foritem">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${topology_template.node_templates['${key}'].type}</arg>
</arguments>
<assign>
<var>${key_type}</var>
</assign>
<msg timestamp="20210916 18:01:06.441" level="INFO">${key_type} = tosca.nodes.nfv.VduCp</msg>
<status status="PASS" starttime="20210916 18:01:06.437" endtime="20210916 18:01:06.442"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_compute}</arg>
</arguments>
<assign>
<var>${VDU_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_compute}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.444" level="FAIL">tosca.nodes.nfv.VduCp != tosca.nodes.nfv.Vdu.Compute</msg>
<status status="FAIL" starttime="20210916 18:01:06.443" endtime="20210916 18:01:06.444"></status>
</kw>
<msg timestamp="20210916 18:01:06.445" level="INFO">${VDU_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.443" endtime="20210916 18:01:06.445"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<assign>
<var>${VNF_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.448" level="FAIL">tosca.nodes.nfv.VduCp != tst010.vnf.simple</msg>
<status status="FAIL" starttime="20210916 18:01:06.446" endtime="20210916 18:01:06.448"></status>
</kw>
<msg timestamp="20210916 18:01:06.448" level="INFO">${VNF_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.445" endtime="20210916 18:01:06.449"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_virtual_link}</arg>
</arguments>
<assign>
<var>${Link_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_virtual_link}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.452" level="FAIL">tosca.nodes.nfv.VduCp != tosca.nodes.nfv.VnfVirtualLink</msg>
<status status="FAIL" starttime="20210916 18:01:06.450" endtime="20210916 18:01:06.452"></status>
</kw>
<msg timestamp="20210916 18:01:06.452" level="INFO">${Link_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.449" endtime="20210916 18:01:06.452"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_cp}</arg>
</arguments>
<assign>
<var>${VDUcp_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_cp}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.453" endtime="20210916 18:01:06.454"></status>
</kw>
<msg timestamp="20210916 18:01:06.454" level="INFO">${VDUcp_check} = True</msg>
<status status="PASS" starttime="20210916 18:01:06.453" endtime="20210916 18:01:06.454"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_storage}</arg>
</arguments>
<assign>
<var>${Storage_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_storage}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.457" level="FAIL">tosca.nodes.nfv.VduCp != tosca.nodes.nfv.Vdu.VirtualBlockStorage</msg>
<status status="FAIL" starttime="20210916 18:01:06.455" endtime="20210916 18:01:06.458"></status>
</kw>
<msg timestamp="20210916 18:01:06.459" level="INFO">${Storage_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.455" endtime="20210916 18:01:06.459"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VDU_check}</arg>
<arg>Append To List</arg>
<arg>${VDU_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.460" endtime="20210916 18:01:06.460"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VNF_check}</arg>
<arg>Append To List</arg>
<arg>${VNF_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.461" endtime="20210916 18:01:06.461"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VNF_check}</arg>
<arg>Get VNF Attributes from SOL001</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.462" endtime="20210916 18:01:06.462"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Link_check}</arg>
<arg>Append To List</arg>
<arg>${VirtualLink_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.463" endtime="20210916 18:01:06.464"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VDUcp_check}</arg>
<arg>Append To List</arg>
<arg>${CP_labels}</arg>
<arg>${key}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${CP_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.465" endtime="20210916 18:01:06.465"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.464" endtime="20210916 18:01:06.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Storage_check}</arg>
<arg>Append To List</arg>
<arg>${Storage_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.467" endtime="20210916 18:01:06.467"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.436" endtime="20210916 18:01:06.468"></status>
</kw>
<kw name="${key} = management" type="foritem">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${topology_template.node_templates['${key}'].type}</arg>
</arguments>
<assign>
<var>${key_type}</var>
</assign>
<msg timestamp="20210916 18:01:06.470" level="INFO">${key_type} = tosca.nodes.nfv.VduCp</msg>
<status status="PASS" starttime="20210916 18:01:06.469" endtime="20210916 18:01:06.470"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_compute}</arg>
</arguments>
<assign>
<var>${VDU_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_compute}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.472" level="FAIL">tosca.nodes.nfv.VduCp != tosca.nodes.nfv.Vdu.Compute</msg>
<status status="FAIL" starttime="20210916 18:01:06.471" endtime="20210916 18:01:06.472"></status>
</kw>
<msg timestamp="20210916 18:01:06.472" level="INFO">${VDU_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.471" endtime="20210916 18:01:06.472"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<assign>
<var>${VNF_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.474" level="FAIL">tosca.nodes.nfv.VduCp != tst010.vnf.simple</msg>
<status status="FAIL" starttime="20210916 18:01:06.473" endtime="20210916 18:01:06.475"></status>
</kw>
<msg timestamp="20210916 18:01:06.475" level="INFO">${VNF_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.473" endtime="20210916 18:01:06.476"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_virtual_link}</arg>
</arguments>
<assign>
<var>${Link_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_virtual_link}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.478" level="FAIL">tosca.nodes.nfv.VduCp != tosca.nodes.nfv.VnfVirtualLink</msg>
<status status="FAIL" starttime="20210916 18:01:06.477" endtime="20210916 18:01:06.478"></status>
</kw>
<msg timestamp="20210916 18:01:06.479" level="INFO">${Link_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.476" endtime="20210916 18:01:06.479"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_cp}</arg>
</arguments>
<assign>
<var>${VDUcp_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_cp}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.481" endtime="20210916 18:01:06.483"></status>
</kw>
<msg timestamp="20210916 18:01:06.483" level="INFO">${VDUcp_check} = True</msg>
<status status="PASS" starttime="20210916 18:01:06.481" endtime="20210916 18:01:06.483"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_storage}</arg>
</arguments>
<assign>
<var>${Storage_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_storage}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.486" level="FAIL">tosca.nodes.nfv.VduCp != tosca.nodes.nfv.Vdu.VirtualBlockStorage</msg>
<status status="FAIL" starttime="20210916 18:01:06.485" endtime="20210916 18:01:06.486"></status>
</kw>
<msg timestamp="20210916 18:01:06.486" level="INFO">${Storage_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.485" endtime="20210916 18:01:06.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VDU_check}</arg>
<arg>Append To List</arg>
<arg>${VDU_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.488" endtime="20210916 18:01:06.488"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VNF_check}</arg>
<arg>Append To List</arg>
<arg>${VNF_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.489" endtime="20210916 18:01:06.490"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VNF_check}</arg>
<arg>Get VNF Attributes from SOL001</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.490" endtime="20210916 18:01:06.491"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Link_check}</arg>
<arg>Append To List</arg>
<arg>${VirtualLink_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.492" endtime="20210916 18:01:06.492"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VDUcp_check}</arg>
<arg>Append To List</arg>
<arg>${CP_labels}</arg>
<arg>${key}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${CP_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.493" endtime="20210916 18:01:06.495"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.492" endtime="20210916 18:01:06.495"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Storage_check}</arg>
<arg>Append To List</arg>
<arg>${Storage_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.495" endtime="20210916 18:01:06.496"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.468" endtime="20210916 18:01:06.496"></status>
</kw>
<kw name="${key} = left" type="foritem">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${topology_template.node_templates['${key}'].type}</arg>
</arguments>
<assign>
<var>${key_type}</var>
</assign>
<msg timestamp="20210916 18:01:06.498" level="INFO">${key_type} = tosca.nodes.nfv.VduCp</msg>
<status status="PASS" starttime="20210916 18:01:06.497" endtime="20210916 18:01:06.498"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_compute}</arg>
</arguments>
<assign>
<var>${VDU_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_compute}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.500" level="FAIL">tosca.nodes.nfv.VduCp != tosca.nodes.nfv.Vdu.Compute</msg>
<status status="FAIL" starttime="20210916 18:01:06.500" endtime="20210916 18:01:06.500"></status>
</kw>
<msg timestamp="20210916 18:01:06.501" level="INFO">${VDU_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.499" endtime="20210916 18:01:06.501"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<assign>
<var>${VNF_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.503" level="FAIL">tosca.nodes.nfv.VduCp != tst010.vnf.simple</msg>
<status status="FAIL" starttime="20210916 18:01:06.503" endtime="20210916 18:01:06.503"></status>
</kw>
<msg timestamp="20210916 18:01:06.504" level="INFO">${VNF_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.502" endtime="20210916 18:01:06.504"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_virtual_link}</arg>
</arguments>
<assign>
<var>${Link_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_virtual_link}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.508" level="FAIL">tosca.nodes.nfv.VduCp != tosca.nodes.nfv.VnfVirtualLink</msg>
<status status="FAIL" starttime="20210916 18:01:06.506" endtime="20210916 18:01:06.508"></status>
</kw>
<msg timestamp="20210916 18:01:06.509" level="INFO">${Link_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.504" endtime="20210916 18:01:06.509"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_cp}</arg>
</arguments>
<assign>
<var>${VDUcp_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_cp}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.510" endtime="20210916 18:01:06.511"></status>
</kw>
<msg timestamp="20210916 18:01:06.511" level="INFO">${VDUcp_check} = True</msg>
<status status="PASS" starttime="20210916 18:01:06.510" endtime="20210916 18:01:06.512"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_storage}</arg>
</arguments>
<assign>
<var>${Storage_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_storage}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.514" level="FAIL">tosca.nodes.nfv.VduCp != tosca.nodes.nfv.Vdu.VirtualBlockStorage</msg>
<status status="FAIL" starttime="20210916 18:01:06.513" endtime="20210916 18:01:06.515"></status>
</kw>
<msg timestamp="20210916 18:01:06.515" level="INFO">${Storage_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.512" endtime="20210916 18:01:06.515"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VDU_check}</arg>
<arg>Append To List</arg>
<arg>${VDU_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.516" endtime="20210916 18:01:06.517"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VNF_check}</arg>
<arg>Append To List</arg>
<arg>${VNF_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.517" endtime="20210916 18:01:06.518"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VNF_check}</arg>
<arg>Get VNF Attributes from SOL001</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.519" endtime="20210916 18:01:06.519"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Link_check}</arg>
<arg>Append To List</arg>
<arg>${VirtualLink_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.520" endtime="20210916 18:01:06.521"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VDUcp_check}</arg>
<arg>Append To List</arg>
<arg>${CP_labels}</arg>
<arg>${key}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${CP_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.522" endtime="20210916 18:01:06.523"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.521" endtime="20210916 18:01:06.523"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Storage_check}</arg>
<arg>Append To List</arg>
<arg>${Storage_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.524" endtime="20210916 18:01:06.524"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.496" endtime="20210916 18:01:06.525"></status>
</kw>
<kw name="${key} = vdu-b-1-vsd" type="foritem">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${topology_template.node_templates['${key}'].type}</arg>
</arguments>
<assign>
<var>${key_type}</var>
</assign>
<msg timestamp="20210916 18:01:06.527" level="INFO">${key_type} = tosca.nodes.nfv.Vdu.VirtualBlockStorage</msg>
<status status="PASS" starttime="20210916 18:01:06.525" endtime="20210916 18:01:06.527"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_compute}</arg>
</arguments>
<assign>
<var>${VDU_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_compute}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.529" level="FAIL">tosca.nodes.nfv.Vdu.VirtualBlockStorage != tosca.nodes.nfv.Vdu.Compute</msg>
<status status="FAIL" starttime="20210916 18:01:06.528" endtime="20210916 18:01:06.529"></status>
</kw>
<msg timestamp="20210916 18:01:06.530" level="INFO">${VDU_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.528" endtime="20210916 18:01:06.530"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<assign>
<var>${VNF_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.532" level="FAIL">tosca.nodes.nfv.Vdu.VirtualBlockStorage != tst010.vnf.simple</msg>
<status status="FAIL" starttime="20210916 18:01:06.531" endtime="20210916 18:01:06.533"></status>
</kw>
<msg timestamp="20210916 18:01:06.533" level="INFO">${VNF_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.531" endtime="20210916 18:01:06.533"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_virtual_link}</arg>
</arguments>
<assign>
<var>${Link_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_virtual_link}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.536" level="FAIL">tosca.nodes.nfv.Vdu.VirtualBlockStorage != tosca.nodes.nfv.VnfVirtualLink</msg>
<status status="FAIL" starttime="20210916 18:01:06.535" endtime="20210916 18:01:06.539"></status>
</kw>
<msg timestamp="20210916 18:01:06.540" level="INFO">${Link_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.534" endtime="20210916 18:01:06.540"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_cp}</arg>
</arguments>
<assign>
<var>${VDUcp_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_cp}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.545" level="FAIL">tosca.nodes.nfv.Vdu.VirtualBlockStorage != tosca.nodes.nfv.VduCp</msg>
<status status="FAIL" starttime="20210916 18:01:06.542" endtime="20210916 18:01:06.546"></status>
</kw>
<msg timestamp="20210916 18:01:06.546" level="INFO">${VDUcp_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.541" endtime="20210916 18:01:06.546"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_storage}</arg>
</arguments>
<assign>
<var>${Storage_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_storage}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.549" endtime="20210916 18:01:06.550"></status>
</kw>
<msg timestamp="20210916 18:01:06.550" level="INFO">${Storage_check} = True</msg>
<status status="PASS" starttime="20210916 18:01:06.547" endtime="20210916 18:01:06.550"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VDU_check}</arg>
<arg>Append To List</arg>
<arg>${VDU_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.551" endtime="20210916 18:01:06.551"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VNF_check}</arg>
<arg>Append To List</arg>
<arg>${VNF_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.552" endtime="20210916 18:01:06.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VNF_check}</arg>
<arg>Get VNF Attributes from SOL001</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.553" endtime="20210916 18:01:06.553"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Link_check}</arg>
<arg>Append To List</arg>
<arg>${VirtualLink_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.554" endtime="20210916 18:01:06.555"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VDUcp_check}</arg>
<arg>Append To List</arg>
<arg>${CP_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.555" endtime="20210916 18:01:06.556"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Storage_check}</arg>
<arg>Append To List</arg>
<arg>${Storage_labels}</arg>
<arg>${key}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${Storage_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.559" endtime="20210916 18:01:06.559"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.557" endtime="20210916 18:01:06.560"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.525" endtime="20210916 18:01:06.560"></status>
</kw>
<kw name="${key} = VDU-B" type="foritem">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${topology_template.node_templates['${key}'].type}</arg>
</arguments>
<assign>
<var>${key_type}</var>
</assign>
<msg timestamp="20210916 18:01:06.563" level="INFO">${key_type} = tosca.nodes.nfv.Vdu.Compute</msg>
<status status="PASS" starttime="20210916 18:01:06.562" endtime="20210916 18:01:06.563"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_compute}</arg>
</arguments>
<assign>
<var>${VDU_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_compute}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.565" endtime="20210916 18:01:06.569"></status>
</kw>
<msg timestamp="20210916 18:01:06.570" level="INFO">${VDU_check} = True</msg>
<status status="PASS" starttime="20210916 18:01:06.564" endtime="20210916 18:01:06.570"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<assign>
<var>${VNF_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.573" level="FAIL">tosca.nodes.nfv.Vdu.Compute != tst010.vnf.simple</msg>
<status status="FAIL" starttime="20210916 18:01:06.572" endtime="20210916 18:01:06.573"></status>
</kw>
<msg timestamp="20210916 18:01:06.574" level="INFO">${VNF_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.571" endtime="20210916 18:01:06.574"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_virtual_link}</arg>
</arguments>
<assign>
<var>${Link_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_virtual_link}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.576" level="FAIL">tosca.nodes.nfv.Vdu.Compute != tosca.nodes.nfv.VnfVirtualLink</msg>
<status status="FAIL" starttime="20210916 18:01:06.575" endtime="20210916 18:01:06.577"></status>
</kw>
<msg timestamp="20210916 18:01:06.577" level="INFO">${Link_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.575" endtime="20210916 18:01:06.578"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_cp}</arg>
</arguments>
<assign>
<var>${VDUcp_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_cp}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.581" level="FAIL">tosca.nodes.nfv.Vdu.Compute != tosca.nodes.nfv.VduCp</msg>
<status status="FAIL" starttime="20210916 18:01:06.580" endtime="20210916 18:01:06.581"></status>
</kw>
<msg timestamp="20210916 18:01:06.581" level="INFO">${VDUcp_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.579" endtime="20210916 18:01:06.582"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_storage}</arg>
</arguments>
<assign>
<var>${Storage_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_storage}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.584" level="FAIL">tosca.nodes.nfv.Vdu.Compute != tosca.nodes.nfv.Vdu.VirtualBlockStorage</msg>
<status status="FAIL" starttime="20210916 18:01:06.583" endtime="20210916 18:01:06.584"></status>
</kw>
<msg timestamp="20210916 18:01:06.585" level="INFO">${Storage_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.582" endtime="20210916 18:01:06.585"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VDU_check}</arg>
<arg>Append To List</arg>
<arg>${VDU_labels}</arg>
<arg>${key}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${VDU_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.587" endtime="20210916 18:01:06.588"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.586" endtime="20210916 18:01:06.589"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VNF_check}</arg>
<arg>Append To List</arg>
<arg>${VNF_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.590" endtime="20210916 18:01:06.591"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VNF_check}</arg>
<arg>Get VNF Attributes from SOL001</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.592" endtime="20210916 18:01:06.592"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Link_check}</arg>
<arg>Append To List</arg>
<arg>${VirtualLink_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.593" endtime="20210916 18:01:06.594"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VDUcp_check}</arg>
<arg>Append To List</arg>
<arg>${CP_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.594" endtime="20210916 18:01:06.595"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Storage_check}</arg>
<arg>Append To List</arg>
<arg>${Storage_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.597" endtime="20210916 18:01:06.597"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.561" endtime="20210916 18:01:06.598"></status>
</kw>
<kw name="${key} = vnf-b-1_VNF" type="foritem">
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${topology_template.node_templates['${key}'].type}</arg>
</arguments>
<assign>
<var>${key_type}</var>
</assign>
<msg timestamp="20210916 18:01:06.601" level="INFO">${key_type} = tst010.vnf.simple</msg>
<status status="PASS" starttime="20210916 18:01:06.599" endtime="20210916 18:01:06.601"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_compute}</arg>
</arguments>
<assign>
<var>${VDU_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_compute}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.604" level="FAIL">tst010.vnf.simple != tosca.nodes.nfv.Vdu.Compute</msg>
<status status="FAIL" starttime="20210916 18:01:06.603" endtime="20210916 18:01:06.604"></status>
</kw>
<msg timestamp="20210916 18:01:06.605" level="INFO">${VDU_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.602" endtime="20210916 18:01:06.605"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<assign>
<var>${VNF_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VNF}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.608" endtime="20210916 18:01:06.609"></status>
</kw>
<msg timestamp="20210916 18:01:06.609" level="INFO">${VNF_check} = True</msg>
<status status="PASS" starttime="20210916 18:01:06.607" endtime="20210916 18:01:06.610"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_virtual_link}</arg>
</arguments>
<assign>
<var>${Link_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_virtual_link}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.612" level="FAIL">tst010.vnf.simple != tosca.nodes.nfv.VnfVirtualLink</msg>
<status status="FAIL" starttime="20210916 18:01:06.611" endtime="20210916 18:01:06.612"></status>
</kw>
<msg timestamp="20210916 18:01:06.613" level="INFO">${Link_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.610" endtime="20210916 18:01:06.613"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_cp}</arg>
</arguments>
<assign>
<var>${VDUcp_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_VDU_cp}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.617" level="FAIL">tst010.vnf.simple != tosca.nodes.nfv.VduCp</msg>
<status status="FAIL" starttime="20210916 18:01:06.615" endtime="20210916 18:01:06.618"></status>
</kw>
<msg timestamp="20210916 18:01:06.619" level="INFO">${VDUcp_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.614" endtime="20210916 18:01:06.619"></status>
</kw>
<kw name="Run Keyword And Return Status" library="BuiltIn">
<doc>Runs the given keyword with given arguments and returns the status as a Boolean value.</doc>
<arguments>
<arg>Should Be Equal As Strings</arg>
<arg>${key_type}</arg>
<arg>${tosca_type_storage}</arg>
</arguments>
<assign>
<var>${Storage_check}</var>
</assign>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${key_type}</arg>
<arg>${tosca_type_storage}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.622" level="FAIL">tst010.vnf.simple != tosca.nodes.nfv.Vdu.VirtualBlockStorage</msg>
<status status="FAIL" starttime="20210916 18:01:06.621" endtime="20210916 18:01:06.622"></status>
</kw>
<msg timestamp="20210916 18:01:06.623" level="INFO">${Storage_check} = False</msg>
<status status="PASS" starttime="20210916 18:01:06.620" endtime="20210916 18:01:06.623"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VDU_check}</arg>
<arg>Append To List</arg>
<arg>${VDU_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.624" endtime="20210916 18:01:06.625"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VNF_check}</arg>
<arg>Append To List</arg>
<arg>${VNF_labels}</arg>
<arg>${key}</arg>
</arguments>
<kw name="Append To List" library="Collections">
<doc>Adds ``values`` to the end of ``list``.</doc>
<arguments>
<arg>${VNF_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.627" endtime="20210916 18:01:06.627"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.625" endtime="20210916 18:01:06.628"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VNF_check}</arg>
<arg>Get VNF Attributes from SOL001</arg>
<arg>${key}</arg>
</arguments>
<kw name="Get VNF Attributes from SOL001">
<arguments>
<arg>${key}</arg>
</arguments>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${topology_template.node_templates['${VNF_label}'].properties.descriptor_id}</arg>
</arguments>
<assign>
<var>${descriptor_id}</var>
</assign>
<msg timestamp="20210916 18:01:06.631" level="INFO">${descriptor_id} = VNF-B</msg>
<status status="PASS" starttime="20210916 18:01:06.630" endtime="20210916 18:01:06.632"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${topology_template.node_templates['${VNF_label}'].properties.provider}</arg>
</arguments>
<assign>
<var>${provider}</var>
</assign>
<msg timestamp="20210916 18:01:06.633" level="INFO">${provider} = ETSI TST WG</msg>
<status status="PASS" starttime="20210916 18:01:06.632" endtime="20210916 18:01:06.634"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${topology_template.node_templates['${VNF_label}'].properties.product_name}</arg>
</arguments>
<assign>
<var>${product_name}</var>
</assign>
<msg timestamp="20210916 18:01:06.635" level="INFO">${product_name} = VDU_VNF-B</msg>
<status status="PASS" starttime="20210916 18:01:06.634" endtime="20210916 18:01:06.636"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${topology_template.node_templates['${VNF_label}'].properties.software_version}</arg>
</arguments>
<assign>
<var>${software_version}</var>
</assign>
<msg timestamp="20210916 18:01:06.639" level="INFO">${software_version} = 2.0</msg>
<status status="PASS" starttime="20210916 18:01:06.637" endtime="20210916 18:01:06.639"></status>
</kw>
<kw name="Get Variable Value" library="BuiltIn">
<doc>Returns variable value or ``default`` if the variable does not exist.</doc>
<arguments>
<arg>${topology_template.node_templates['${VNF_label}'].properties.descriptor_version}</arg>
</arguments>
<assign>
<var>${descriptor_version}</var>
</assign>
<msg timestamp="20210916 18:01:06.641" level="INFO">${descriptor_version} = 2.0</msg>
<status status="PASS" starttime="20210916 18:01:06.639" endtime="20210916 18:01:06.642"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Descriptor_ID}</arg>
<arg>${descriptor_id}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.643" level="INFO">${Descriptor_ID} = VNF-B</msg>
<status status="PASS" starttime="20210916 18:01:06.643" endtime="20210916 18:01:06.643"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Provider}</arg>
<arg>${provider}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.645" level="INFO">${Provider} = ETSI TST WG</msg>
<status status="PASS" starttime="20210916 18:01:06.644" endtime="20210916 18:01:06.645"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Product_Name}</arg>
<arg>${product_name}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.648" level="INFO">${Product_Name} = VDU_VNF-B</msg>
<status status="PASS" starttime="20210916 18:01:06.647" endtime="20210916 18:01:06.648"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Software_Version}</arg>
<arg>${software_version}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.650" level="INFO">${Software_Version} = 2.0</msg>
<status status="PASS" starttime="20210916 18:01:06.649" endtime="20210916 18:01:06.651"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>${Descriptor_Version}</arg>
<arg>${descriptor_version}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.653" level="INFO">${Descriptor_Version} = 2.0</msg>
<status status="PASS" starttime="20210916 18:01:06.652" endtime="20210916 18:01:06.653"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.630" endtime="20210916 18:01:06.654"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.629" endtime="20210916 18:01:06.654"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Link_check}</arg>
<arg>Append To List</arg>
<arg>${VirtualLink_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.655" endtime="20210916 18:01:06.656"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${VDUcp_check}</arg>
<arg>Append To List</arg>
<arg>${CP_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.657" endtime="20210916 18:01:06.659"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${Storage_check}</arg>
<arg>Append To List</arg>
<arg>${Storage_labels}</arg>
<arg>${key}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.659" endtime="20210916 18:01:06.661"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.599" endtime="20210916 18:01:06.661"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.434" endtime="20210916 18:01:06.662"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{VDU_IDs}</arg>
<arg>@{VDU_labels}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.665" level="INFO">@{VDU_IDs} = [ VDU-B ]</msg>
<status status="PASS" starttime="20210916 18:01:06.663" endtime="20210916 18:01:06.665"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{VNF_IDs}</arg>
<arg>@{VNF_labels}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.668" level="INFO">@{VNF_IDs} = [ vnf-b-1_VNF ]</msg>
<status status="PASS" starttime="20210916 18:01:06.667" endtime="20210916 18:01:06.669"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{VirtualLink_IDs}</arg>
<arg>@{VirtualLink_labels}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.670" level="INFO">@{VirtualLink_IDs} = [ ]</msg>
<status status="PASS" starttime="20210916 18:01:06.669" endtime="20210916 18:01:06.671"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{CP_IDs}</arg>
<arg>@{CP_labels}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.672" level="INFO">@{CP_IDs} = [ right | management | left ]</msg>
<status status="PASS" starttime="20210916 18:01:06.671" endtime="20210916 18:01:06.672"></status>
</kw>
<kw name="Set Global Variable" library="BuiltIn">
<doc>Makes a variable available globally in all tests and suites.</doc>
<arguments>
<arg>@{Storage_IDs}</arg>
<arg>@{Storage_labels}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.673" level="INFO">@{Storage_IDs} = [ vdu-b-1-vsd ]</msg>
<status status="PASS" starttime="20210916 18:01:06.673" endtime="20210916 18:01:06.674"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.370" endtime="20210916 18:01:06.674"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.368" endtime="20210916 18:01:06.674"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.363" endtime="20210916 18:01:06.675"></status>
</kw>
<doc>Test ID: 1.1.1
Test title: PARSE the descriptor file correctly
Test objective: The objective is to check if the SOL001 descriptor file is parsed correctly.
Pre-condition: SOL001 or SOL006 descriptor YAML file is available.
Post-condition: Values from the descriptor files are stored in suite variables.</doc>
<status status="PASS" starttime="20210916 18:01:06.361" endtime="20210916 18:01:06.675" critical="yes"></status>
</test>
<test id="s1-s1-t2" name="Match the Response attributes with parsed data SOL006">
<kw name="Match the Response Attributes with Descriptors SOL006">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${Descriptor_ID}</arg>
<arg>${Response_VNFId}</arg>
</arguments>
<msg timestamp="20210916 18:01:06.681" level="FAIL">VNF-B != VNF-B-2vdu</msg>
<status status="FAIL" starttime="20210916 18:01:06.680" endtime="20210916 18:01:06.682"></status>
</kw>
<status status="FAIL" starttime="20210916 18:01:06.680" endtime="20210916 18:01:06.682"></status>
</kw>
<doc>Test ID: 1.1.2
Test title: Match the Response attributes with parsed data SOL006
Test objective: The objective is to check if the Response body attributes match with the information in SOL006 descriptor file.
Pre-condition: Either SOL001 or SOL006 descriptor YAML file has been parsed.
Post-condition:</doc>
<status status="FAIL" starttime="20210916 18:01:06.678" endtime="20210916 18:01:06.683" critical="yes">VNF-B != VNF-B-2vdu</status>
</test>
<test id="s1-s1-t3" name="Match the Response attributes with parsed data SOL001">
<kw name="Match the Response Attributes with Descriptors SOL001">
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${Descriptor_ID}</arg>
<arg>${Response_vnfd_id_SOL1}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.687" endtime="20210916 18:01:06.688"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${Product_Name}</arg>
<arg>${Response_ProductNameS001}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.689" endtime="20210916 18:01:06.690"></status>
</kw>
<kw name="Should Be Equal As Strings" library="BuiltIn">
<doc>Fails if objects are unequal after converting them to strings.</doc>
<arguments>
<arg>${Software_Version}</arg>
<arg>${Response_SoftwareVersionS001}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.690" endtime="20210916 18:01:06.691"></status>
</kw>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${VDU_IDs}</arg>
<arg>${Response_vduIdS001}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.691" endtime="20210916 18:01:06.692"></status>
</kw>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${CP_IDs}</arg>
<arg>${Response_extCPS001}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.692" endtime="20210916 18:01:06.693"></status>
</kw>
<kw name="List Should Contain Value" library="Collections">
<doc>Fails if the ``value`` is not found from ``list``.</doc>
<arguments>
<arg>${Storage_IDs}</arg>
<arg>${Response_StorageS001}</arg>
</arguments>
<status status="PASS" starttime="20210916 18:01:06.693" endtime="20210916 18:01:06.694"></status>
</kw>
<status status="PASS" starttime="20210916 18:01:06.686" endtime="20210916 18:01:06.694"></status>
</kw>
<doc>Test ID: 1.1.3
Test title: Match the Response attributes with parsed data SOL001
Test objective: The objective is to check if the Response body attributes match with the information in SOL001 descriptor file.
Pre-condition: Either SOL001 or SOL006 descriptor YAML file has been parsed.
Post-condition:</doc>
<status status="PASS" starttime="20210916 18:01:06.685" endtime="20210916 18:01:06.694" critical="yes"></status>
</test>
<status status="FAIL" starttime="20210916 18:01:05.869" endtime="20210916 18:01:06.695"></status>
</suite>
<status status="FAIL" starttime="20210916 18:01:05.802" endtime="20210916 18:01:06.700"></status>
</suite>
<statistics>
<total>
<stat pass="2" fail="1">Critical Tests</stat>
<stat pass="2" fail="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat pass="2" fail="1" id="s1" name="DescriptorDemo">DescriptorDemo</stat>
<stat pass="2" fail="1" id="s1-s1" name="ParserTesting">DescriptorDemo.ParserTesting</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
